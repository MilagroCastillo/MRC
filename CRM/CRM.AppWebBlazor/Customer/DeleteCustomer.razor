@page "/delete-customer/{id:int}"

@using CRM.DTOs.CustomerDTOs;
@using Microsoft.AspNetCore.Components.Forms;
@using CRM.AppWebBlazor.Data;

<h3>Eliminar Cliente</h3>
@if(isSuccess == false && isError == false)
{
    <div class="row">
        <div class="col-4">
            <div class="form-group">
                <label for="Name">Nombre:</label>
                <input type="text" class="form-control" disabled @bind="customer.Name"/>
            </div>
        </div>
        <div class="col-4">
            <div class="form-group">
                <label for="LatName">Apellido:</label>
                <input type="text" class="form-control" disabled @bind="customer.LastName"/>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="form-group">
                <label for="Address">Direccion:</label>
                <textarea disabled class="form-control" @bind="customer.Address"></textarea>
            </div>
        </div>
    </div>
    <br >
    <div class="row">
        <div class="col-12">
            <button class="btn btn-primary" @onclick="async () => await Delete()">Eliminar</button>
            <NavLink href="/customer-list" class="btn btn-secondary">Cancelar</NavLink>
        </div>
    </div>
}
else if (isSuccess)
{
    <p class="alert alert-success">Cliente se elimina con exito</p>
    <NavLink href="/customer-list" class="btn btn-primary">Aceptar</NavLink>
}
else if (isError)
{
    <p class="alert alert-success">Sucedio un error al intentar eliminar</p>
    <NavLink href="/customer-list" class="btn btn-primary">Aceptar</NavLink>
    
}
@code {
    //declaracion de un parametro llamado "Id" que puede ser pasado al componente
    [Parameter]
    public int Id { get; set; }

    //inyeccion de depedencia de CustomerService para acceder a los servicios relacionados con los clientes
    [Inject]
    CustomerService customerService { get; set; }

    // declaracion e inicializacion de un objeto "customer" para almacenar la informacion del cliente
    GetIdResultCustomerDTO customer = new GetIdResultCustomerDTO();

    // declaracion de variables booleans para manejar el estado de exito y error
    bool isSuccess = false;
    bool isError = false;

    // metodo que se llama cuando se inicializa el componenete
    protected override async Task OnInitializedAsync()
    {
        //realiza una llamda asicronica para obtener la informacion de cliente por su Id
        customer = await customerService.GetById(Id);

    }
    //metodo para eliminar el cliente
    private async Task Delete()
    {
        //realiza una llamada asicronica para eliminar el cliente por su Id
        int result = await customerService.Delete(customer.Id);

       //verificar si el resultado de la eliminacion es diferente de cero(exito) o igual a cero(error)
    if (result != 0)
            isSuccess = true;
        else
            isError = true;


    }
}


